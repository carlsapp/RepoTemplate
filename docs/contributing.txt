************
Contributing
************

Contributions are always welcome! This open-source project depends on community
contributions for all aspects of the project's development and maintenance.
Regardless of your skill level or expertises, there are many ways to provide
meaningful contributions.


Documentation
=============

Documentation is written in reStructuredText and is located in the *docs*
folder. Information about compiling the documentation into HTML files is
located in the *docs/README.md* file.

Documentation Style Guide
-------------------------

Whenever possible, documentation will follow the `Python documentation style
guide <https://docs.python.org/devguide/documenting.html>`_ and the `style
guide for Sphinx-based documentations <https://documentation-style-guide-sphinx.readthedocs.io/en/latest/>`_,
which is essentially a summary of the Python documentation style guide.
However, the style guide isn't strictly enforced and is used more as a
guideline for writing documentation that's easy to read and maintain. The
Python documentation style guide was chosen for its significant history of
writing documentation in reStructuredText and the suggestions in their guide
should not be taken lightly.

Building the Documentation
--------------------------

Instructions for building this documentation is included in the
:file:`docs/README.md` file because the information is necessary to get an
easily navigatable version of this documentation.


Code Base
=========

Most of the code for this project is located at the root of the GitHub
repository.

Programming Languages
---------------------

In general, we try to use as few programming languages as possible and the
least complicated programming language possible to get the job done. This
allows a quick ramp for new contributers and minimizes the introduction of new
bugs. The below programming languages are used in this project:

* **Markdown** - The :file:`README.md` files located in all directories are written in
  Markdown. More specifically, they're written in `CommonMark <http://commonmark.org/>`_
  and may utilize `GitHub Flavored Markdown (GFM) <https://github.github.com/gfm/>`_.
  Markdown was chosen for its simplicity and support by GitHub. The README
  files could have been written in reStructuredText, but the added complexity
  wasn't necessary.
* **reStructuredText** - The documentation located in the :file:`docs`
  directory is written in `reStructuredText <http://docutils.sourceforge.net/rst.html>`_.
  This language allows us to use Sphinx, Read the Docs, and the many other
  useful tools built around reStructuredText. The language is more complicated
  than MarkDown, but provides many more features to provide a very rich set of
  documentation.

File and Folder Structure
-------------------------

In every directory, there is a :file:`README.md` file that describes the files
and folders in that directory. Here, we will give a brief overview to help you
find the files you're interested in.

The main entry point for the program is located in INSERT_FILE_NAME. For more
details on options, see the user documentation.

Most documentation is located in the :file:`docs` folder. Some minor
documentation or summaries may be included in the :file:`README.md` files. For
more details, see the `Documentation`_ section.

Coding Style Guide
------------------

In general, we try to follow these style guides in this order:

* `PEP 8 -- Style Guide for Python Code <https://www.python.org/dev/peps/pep-0008>`_ whenever writing Python code.
* `Google Python Style Guide <https://google.github.io/styleguide/pyguide.html>`_ for Python code.
* `Linux Kernel Coding Style <https://www.kernel.org/doc/html/v4.10/process/coding-style.html>`_
* `Google C++ Style Guide <https://google.github.io/styleguide/cppguide.html>`_

A Summary of Style Guide Advice For Any Code Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* **Line Length** - Most style guides recommend 80 characters to fit on a console screen. I feel 80 characters is
  outdated and a modern monitor can easily display 120 characters. This recommendation differs from the suggestions in
  the `Google Python Style Guide <https://google.github.io/styleguide/pyguide.html>`_,
  `PEP 8 <https://www.python.org/dev/peps/pep-0008>`_
* **Whitespace** - Only use tabs if file size is a major concern. Use 4 spaces in place of a tab. Spaces allow code
  to be aligned correctly.
* **Naming Conventions**

  * **File Names** - Use lowercase and underscores for file names. Agrees with
    `Google Python Style Guide <https://google.github.io/styleguide/pyguide.html>`_,
    `PEP 8 <https://www.python.org/dev/peps/pep-0008>`_, and
    `Google C++ Style Guide <https://google.github.io/styleguide/cppguide.html>`_
  * **Static or Const Variables** - Static or constant variable names should be all UPPER_CASE.
  * **Classes** - Class names should be in CamelCase.
  * **Functions** - Functions should be in lowercase with underscores.


Python Code
^^^^^^^^^^^

General Advice:

* Do as little as possible in the global namespace. Import commands that take a long time to execute and possibly throw
  exceptions are frustrating.


Resolving Issues
================

Issues are filed and tracked using GitHub's issue tracking system. Anyone can
file an issue and anyone can help resolve issues.
